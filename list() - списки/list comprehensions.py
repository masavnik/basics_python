"""list comprehension"""

# new_list = [expression for member in iterable]

# expression — какое-либо вычисление, вызов метода или любое другое допустимое выражение,
# возвращающее значение. В приведенном выше примере выражение i * i является квадратом значения члена.

# member является объектом или значением в списке или итерируемом объекте (iterable).
# В приведенном выше примере значением элемента является i.

# iterable — список, множество, последовательность, генератор или любой другой объект,
# который может возвращать свои элементы по одному. В приведенном выше примере iterable — это range(10).


num = [i for i in range(1, 10, 2)]
# Вывод: [1, 3, 5, 7, 9] - создается список с числами

list_changes_num = [n*n for n in num]
# Вывод: [1, 9, 25, 49, 81] - создается список, где каждое число умножается друг на друга из другого списка

a = [i for i in range(1, 20) if i % 3 == 0]
# Вывод: [3, 6, 9, 12, 15, 18] - создается список с числами с использованием if

matrix = [[x*y for x in range(1, 4)] for y in range(1, 4)]
# Вывод: [[1, 2, 3], [2, 4, 6], [3, 6, 9]] - создается список с вложенными списками